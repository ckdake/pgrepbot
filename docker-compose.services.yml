version: '3.8'

services:
  localstack:
    image: localstack/localstack:3.0
    container_name: postgres-replication-localstack
    ports:
      - "4566:4566"
    environment:
      - SERVICES=secretsmanager,iam
      - DEBUG=1
      - DOCKER_HOST=unix:///var/run/docker.sock
      - LOCALSTACK_HOST=localstack
    volumes:
      - "./localstack-init:/etc/localstack/init/ready.d"
      - "/var/run/docker.sock:/var/run/docker.sock"
    networks:
      - postgres-replication-net

  redis:
    image: redis:7-alpine
    container_name: postgres-replication-redis
    ports:
      - "6379:6379"
    networks:
      - postgres-replication-net

  postgres-primary:
    image: postgres:15
    container_name: postgres-replication-primary
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=testdb
      - POSTGRES_USER=testuser
      - POSTGRES_PASSWORD=testpass
      - POSTGRES_INITDB_ARGS=--auth-host=scram-sha-256
    command: >
      postgres
      -c wal_level=logical
      -c max_replication_slots=10
      -c max_wal_senders=10
      -c shared_preload_libraries=pg_stat_statements
    networks:
      - postgres-replication-net
    volumes:
      - postgres-primary-data:/var/lib/postgresql/data
      - ./docker-init/primary-init.sql:/docker-entrypoint-initdb.d/01-init.sql

  postgres-replica:
    image: postgres:15
    container_name: postgres-replication-replica
    ports:
      - "5433:5432"
    environment:
      - POSTGRES_DB=testdb
      - POSTGRES_USER=testuser
      - POSTGRES_PASSWORD=testpass
      - POSTGRES_INITDB_ARGS=--auth-host=scram-sha-256
    command: >
      postgres
      -c wal_level=logical
      -c max_replication_slots=10
      -c max_wal_senders=10
      -c shared_preload_libraries=pg_stat_statements
    networks:
      - postgres-replication-net
    volumes:
      - postgres-replica-data:/var/lib/postgresql/data
      - ./docker-init/replica-init.sql:/docker-entrypoint-initdb.d/01-init.sql
    depends_on:
      - postgres-primary

  replication-setup:
    image: postgres:15
    container_name: postgres-replication-setup
    networks:
      - postgres-replication-net
    volumes:
      - ./docker-init/setup-subscription.sh:/setup-subscription.sh
    command: ["bash", "/setup-subscription.sh"]
    depends_on:
      - postgres-primary
      - postgres-replica

volumes:
  postgres-primary-data:
  postgres-replica-data:

networks:
  postgres-replication-net:
    driver: bridge