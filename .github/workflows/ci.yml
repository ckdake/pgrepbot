name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  lint:
    runs-on: ubuntu-latest
    name: Lint
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python 3.13
      uses: actions/setup-python@v4
      with:
        python-version: '3.13'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e ".[dev,lint]"
    
    - name: Run linting with ruff
      run: |
        python -m ruff check app/ tests/
        python -m ruff format --check app/ tests/

  test:
    runs-on: ubuntu-latest
    name: Test
    
    services:
      redis:
        image: redis:7-alpine
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: testpass
          POSTGRES_USER: testuser
          POSTGRES_DB: testdb
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U testuser -d testdb"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      
      localstack:
        image: localstack/localstack:3.0
        ports:
          - 4566:4566
        env:
          DEBUG: 1
          SERVICES: secretsmanager,rds
          AWS_DEFAULT_REGION: us-east-1
          AWS_ACCESS_KEY_ID: test
          AWS_SECRET_ACCESS_KEY: test
        options: >-
          --health-cmd "curl -f http://localhost:4566/_localstack/health || exit 1"
          --health-interval 30s
          --health-timeout 10s
          --health-retries 5

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python 3.13
      uses: actions/setup-python@v4
      with:
        python-version: '3.13'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e ".[dev,lint]"
    
    - name: Install AWS CLI for LocalStack
      run: |
        pip install awscli-local
    
    - name: Wait for LocalStack to be ready
      run: |
        timeout 60 bash -c 'until curl -f http://localhost:4566/_localstack/health; do sleep 2; done'
    
    - name: Set up LocalStack secrets
      run: |
        # Create the test secrets that the tests expect
        awslocal secretsmanager create-secret \
          --name "test/postgres/primary" \
          --secret-string '{"username":"testuser","password":"testpass","host":"postgres-primary","port":5432,"dbname":"testdb"}' || true
        
        awslocal secretsmanager create-secret \
          --name "primary-db-creds" \
          --secret-string '{"username":"testuser","password":"testpass","host":"postgres-primary","port":5432,"dbname":"testdb"}' || true
        
        awslocal secretsmanager create-secret \
          --name "test/auth/admin" \
          --secret-string '{"username":"admin","password":"admin123"}' || true
    
    - name: Run tests with coverage
      env:
        REDIS_URL: redis://localhost:6379
        AWS_ENDPOINT_URL: http://localhost:4566
        AWS_ACCESS_KEY_ID: test
        AWS_SECRET_ACCESS_KEY: test
        AWS_DEFAULT_REGION: us-east-1
      run: |
        python -m pytest tests/ -v --tb=short --cov=app --cov-report=term-missing --cov-report=xml
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        token: ${{ secrets.CODECOV_TOKEN }}
        fail_ci_if_error: false

  build:
    runs-on: ubuntu-latest
    name: Build
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Build Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: false
        tags: postgres-replication-manager:latest
        cache-from: type=gha
        cache-to: type=gha,mode=max